/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_H
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_H

#include <thrift/c_glib/processor/thrift_dispatch_processor.h>

#include "edu_rice_republic_amif_republic_types.h"

/* AgentManagerInterface service interface */
typedef struct _edu_rice_republic_amifAgentManagerInterfaceIf edu_rice_republic_amifAgentManagerInterfaceIf;  /* dummy object */

struct _edu_rice_republic_amifAgentManagerInterfaceIfInterface
{
  GTypeInterface parent;

  gboolean (*request) (edu_rice_republic_amifAgentManagerInterfaceIf *iface, edu_rice_republic_amifResponse ** _return, const edu_rice_republic_amifRequest * rq, GError **error);
  gboolean (*release) (edu_rice_republic_amifAgentManagerInterfaceIf *iface, const edu_rice_republic_amifRelease * rl, GError **error);
};
typedef struct _edu_rice_republic_amifAgentManagerInterfaceIfInterface edu_rice_republic_amifAgentManagerInterfaceIfInterface;

GType edu_rice_republic_amif_agent_manager_interface_if_get_type (void);
#define EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_IF (edu_rice_republic_amif_agent_manager_interface_if_get_type())
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_IF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_IF, edu_rice_republic_amifAgentManagerInterfaceIf))
#define EDU_RICE_REPUBLIC_AMIF_IS_AGENT_MANAGER_INTERFACE_IF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_IF))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_IF_GET_INTERFACE(inst) (G_TYPE_INSTANCE_GET_INTERFACE ((inst), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_IF, edu_rice_republic_amifAgentManagerInterfaceIfInterface))

gboolean edu_rice_republic_amif_agent_manager_interface_if_request (edu_rice_republic_amifAgentManagerInterfaceIf *iface, edu_rice_republic_amifResponse ** _return, const edu_rice_republic_amifRequest * rq, GError **error);
gboolean edu_rice_republic_amif_agent_manager_interface_if_release (edu_rice_republic_amifAgentManagerInterfaceIf *iface, const edu_rice_republic_amifRelease * rl, GError **error);

/* AgentManagerInterface service client */
struct _edu_rice_republic_amifAgentManagerInterfaceClient
{
  GObject parent;

  ThriftProtocol *input_protocol;
  ThriftProtocol *output_protocol;
};
typedef struct _edu_rice_republic_amifAgentManagerInterfaceClient edu_rice_republic_amifAgentManagerInterfaceClient;

struct _edu_rice_republic_amifAgentManagerInterfaceClientClass
{
  GObjectClass parent;
};
typedef struct _edu_rice_republic_amifAgentManagerInterfaceClientClass edu_rice_republic_amifAgentManagerInterfaceClientClass;

GType edu_rice_republic_amif_agent_manager_interface_client_get_type (void);
#define EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_CLIENT (edu_rice_republic_amif_agent_manager_interface_client_get_type())
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_CLIENT, edu_rice_republic_amifAgentManagerInterfaceClient))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_CLIENT, edu_rice_republic_amifAgentManagerInterfaceClientClass))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_CLIENT))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_IS_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_CLIENT))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_CLIENT, edu_rice_republic_amifAgentManagerInterfaceClientClass))

gboolean edu_rice_republic_amif_agent_manager_interface_client_request (edu_rice_republic_amifAgentManagerInterfaceIf * iface, edu_rice_republic_amifResponse ** _return, const edu_rice_republic_amifRequest * rq, GError ** error);
gboolean edu_rice_republic_amif_agent_manager_interface_client_send_request (edu_rice_republic_amifAgentManagerInterfaceIf * iface, const edu_rice_republic_amifRequest * rq, GError ** error);
gboolean edu_rice_republic_amif_agent_manager_interface_client_recv_request (edu_rice_republic_amifAgentManagerInterfaceIf * iface, edu_rice_republic_amifResponse ** _return, GError ** error);
gboolean edu_rice_republic_amif_agent_manager_interface_client_release (edu_rice_republic_amifAgentManagerInterfaceIf * iface, const edu_rice_republic_amifRelease * rl, GError ** error);
gboolean edu_rice_republic_amif_agent_manager_interface_client_send_release (edu_rice_republic_amifAgentManagerInterfaceIf * iface, const edu_rice_republic_amifRelease * rl, GError ** error);
void agent_manager_interface_client_set_property (GObject *object, guint property_id, const GValue *value, GParamSpec *pspec);
void agent_manager_interface_client_get_property (GObject *object, guint property_id, GValue *value, GParamSpec *pspec);

/* AgentManagerInterface handler (abstract base class) */
struct _edu_rice_republic_amifAgentManagerInterfaceHandler
{
  GObject parent;
};
typedef struct _edu_rice_republic_amifAgentManagerInterfaceHandler edu_rice_republic_amifAgentManagerInterfaceHandler;

struct _edu_rice_republic_amifAgentManagerInterfaceHandlerClass
{
  GObjectClass parent;

  gboolean (*request) (edu_rice_republic_amifAgentManagerInterfaceIf *iface, edu_rice_republic_amifResponse ** _return, const edu_rice_republic_amifRequest * rq, GError **error);
  gboolean (*release) (edu_rice_republic_amifAgentManagerInterfaceIf *iface, const edu_rice_republic_amifRelease * rl, GError **error);
};
typedef struct _edu_rice_republic_amifAgentManagerInterfaceHandlerClass edu_rice_republic_amifAgentManagerInterfaceHandlerClass;

GType edu_rice_republic_amif_agent_manager_interface_handler_get_type (void);
#define EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_HANDLER (edu_rice_republic_amif_agent_manager_interface_handler_get_type())
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_HANDLER, edu_rice_republic_amifAgentManagerInterfaceHandler))
#define EDU_RICE_REPUBLIC_AMIF_IS_AGENT_MANAGER_INTERFACE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_HANDLER))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_HANDLER, edu_rice_republic_amifAgentManagerInterfaceHandlerClass))
#define EDU_RICE_REPUBLIC_AMIF_IS_AGENT_MANAGER_INTERFACE_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_HANDLER))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_HANDLER, edu_rice_republic_amifAgentManagerInterfaceHandlerClass))

gboolean edu_rice_republic_amif_agent_manager_interface_handler_request (edu_rice_republic_amifAgentManagerInterfaceIf *iface, edu_rice_republic_amifResponse ** _return, const edu_rice_republic_amifRequest * rq, GError **error);
gboolean edu_rice_republic_amif_agent_manager_interface_handler_release (edu_rice_republic_amifAgentManagerInterfaceIf *iface, const edu_rice_republic_amifRelease * rl, GError **error);

/* AgentManagerInterface processor */
struct _edu_rice_republic_amifAgentManagerInterfaceProcessor
{
  ThriftDispatchProcessor parent;

  /* protected */
  edu_rice_republic_amifAgentManagerInterfaceHandler *handler;
  GHashTable *process_map;
};
typedef struct _edu_rice_republic_amifAgentManagerInterfaceProcessor edu_rice_republic_amifAgentManagerInterfaceProcessor;

struct _edu_rice_republic_amifAgentManagerInterfaceProcessorClass
{
  ThriftDispatchProcessorClass parent;

  /* protected */
  gboolean (*dispatch_call) (ThriftDispatchProcessor *processor,
                             ThriftProtocol *in,
                             ThriftProtocol *out,
                             gchar *fname,
                             gint32 seqid,
                             GError **error);
};
typedef struct _edu_rice_republic_amifAgentManagerInterfaceProcessorClass edu_rice_republic_amifAgentManagerInterfaceProcessorClass;

GType edu_rice_republic_amif_agent_manager_interface_processor_get_type (void);
#define EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_PROCESSOR (edu_rice_republic_amif_agent_manager_interface_processor_get_type())
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_PROCESSOR, edu_rice_republic_amifAgentManagerInterfaceProcessor))
#define EDU_RICE_REPUBLIC_AMIF_IS_AGENT_MANAGER_INTERFACE_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_PROCESSOR))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_PROCESSOR, edu_rice_republic_amifAgentManagerInterfaceProcessorClass))
#define EDU_RICE_REPUBLIC_AMIF_IS_AGENT_MANAGER_INTERFACE_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_PROCESSOR))
#define EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_PROCESSOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDU_RICE_REPUBLIC_AMIF_TYPE_AGENT_MANAGER_INTERFACE_PROCESSOR, edu_rice_republic_amifAgentManagerInterfaceProcessorClass))

#endif /* EDU_RICE_REPUBLIC_AMIF_AGENT_MANAGER_INTERFACE_H */
